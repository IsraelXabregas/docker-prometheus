version: "3.8"
services:
  prometheus:
    image: prom/prometheus:v2.36.2
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "2.0"
          memory: 1G
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints: [node.role == manager]
    depends_on:
      - cadvisor
    ports:
      - 9090:9090
    networks:
      - internal
    volumes:
      - prometheus_data:/prometheus
    configs:
      - source: prometheus_config_v1
        target: /etc/prometheus/prometheus.yml
        uid: "101"
        gid: "101"
        mode: 775
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "2.0"
          memory: 1G
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints: [node.role == manager]
    networks:
      - internal
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"

  alertmanager:
    image: prom/alertmanager
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "2.0"
          memory: 1G
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints: [node.role == manager]
    networks:
      - internal
    volumes:
      - alertmanager_data:/etc/alertmanager/
    configs:
      - source: alertmanager_config_v1
        target: /etc/alertmanager/config.yml
        uid: "101"
        gid: "101"
        mode: 775
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "2.0"
          memory: 1G
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints: [node.role == manager]
    networks:
      - internal
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

networks:
  internal:

volumes:
    prometheus_data:
    alertmanager_data:

configs:
  alertmanager_config_v1:
    external: true
  prometheus_config_v1:
    external: true
